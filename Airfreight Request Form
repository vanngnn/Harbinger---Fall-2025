// ======================
// üß† CONFIGURATION
// ======================
const SPREADSHEET_ID = "1mlSBqK9pVCAfbapFpZtgWJAwuxANDgUTDQd9QpB8JQ0"; // Spreadsheet ID
const SHEET_NAME = "Expedited Freight Log"; // workflow tab

//Main contacts:
const MANAGER_EMAIL = "van.nguyen2@harbingermotors.com";
const PLANNER_EMAIL = "van.nguyen2@harbingermotors.com";

//Director approval levels:
const DIRECTOR1_EMAIL = "van.nguyen2@harbingermotors.com";
const DIRECTOR2_EMAIL = "van.nguyen2@harbingermotors.com";

// ‚úÖ Latest deployed Web App URL (NO /u/4/)
const BASE_URL = "https://script.google.com/a/macros/harbingermotors.com/s/AKfycbxYYVHo9D8YYJNVb9nwWFE6fwxKqXB6et69skc8KywSuvJZZKqB7f58WWv-BehyfoA_hw/exec";

// ======================
// üì® 1. ON FORM SUBMIT
// ======================
function onFormSubmit(e) {
  const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);
  const responses = e.values; // [Timestamp, Email, Supplier, Part#, Qty, NeedBy, Rational]

  // === Generate new sequential REQ ID ===
  const idValues = sheet.getRange(2, 1, sheet.getLastRow() - 1, 1).getValues().flat();
  let maxNum = 0;
  idValues.forEach(v => {
    const match = String(v).match(/^REQ-(\d+)$/);
    if (match) {
      const num = parseInt(match[1]);
      if (num > maxNum) maxNum = num;
    }
  });
  const id = "REQ-" + (maxNum + 1);

  const requesterEmail = responses[1];
  const supplier = responses[2];
  const listPartNumber = responses[3];
  const prodornonprod = responses[4];
  const chargesupplier = responses[5];
  const transportationMode = responses[6];
  const needBy = responses[7];
  const rational = responses[8];
  const rationalComments = responses[9] || "";
  const jiraTicket = responses[10];


  const dateSubmitted = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "yyyy-MM-dd");

  const row = [
    id, requesterEmail, supplier, listPartNumber,
    prodornonprod, chargesupplier,
    transportationMode, needBy, rational, rationalComments, jiraTicket,
    "", // Freight Cost
    "", "", "", // Planner Approval, Timestamp, Comment
    "", "", "", // D1 Approval, Timestamp, Comment
    "", "", "", // D2 Approval, Timestamp, Comment
    "New Request - Awaiting Cost",
    PLANNER_EMAIL,
    dateSubmitted
  ];


  sheet.appendRow(row);
  // üü® Highlight Expedited Freight Cost cell (column L)
  const lastRow = sheet.getLastRow();
  const costCell = sheet.getRange(lastRow, 12); // column L
  costCell.setBackground("#FFFF00"); // highlight cost cell

  // === Send styled email ===
  const logLink = "https://docs.google.com/spreadsheets/d/1mlSBqK9pVCAfbapFpZtgWJAwuxANDgUTDQd9QpB8JQ0/edit?gid=148482207#gid=148482207";
  const htmlBody = `
    <p style="font-family:Arial; font-size:14px;">A new expedited shipment request was submitted by <b>${requesterEmail}</b>.</p>
    <table style="border-collapse:collapse; width:600px; font-family:Arial; font-size:13px; border:1px solid #ccc; border-radius:8px; overflow:hidden;">
      <tr style="background-color:#172d44; color:white; text-align:left;">
        <th style="padding:8px; width:40%;">Field</th>
        <th style="padding:8px; width:60%;">Details</th>
      </tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Request ID</b></td><td style="padding:8px;">${id}</td></tr>
      <tr><td style="padding:8px;"><b>Supplier</b></td><td style="padding:8px;">${supplier}</td></tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>List of PO, Part Number, Qty</b></td><td style="padding:8px;">${listPartNumber}</td></tr>

      <tr><td style="padding:8px;"><b>Production or Non-production</b></td><td style="padding:8px;">${prodornonprod}</td></tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Charge back to supplier?</b></td><td style="padding:8px;">${chargesupplier}</td></tr>
      <tr><td style="padding:8px;"><b>Transportation Mode</b></td><td style="padding:8px;">${transportationMode}</td></tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Need By</b></td><td style="padding:8px;">${needBy}</td></tr>

      <tr><td style="padding:8px;"><b>Reasoning</b></td><td style="padding:8px;">${rational}</td></tr>

      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Additional Comments on Reasoning</b></td><td style="padding:8px;">${rationalComments}</td></tr>

      <tr><td style="padding:8px;"><b>Jira Ticket (if applicable)</b></td><td style="padding:8px;">${jiraTicket}</td></tr>

    </table>
    <br>
    <p style="font-family:Arial; font-size:13px;">
      Please open the <a href="${logLink}" style="color:#007bff; text-decoration:none;"><b>${SHEET_NAME}</b></a> form and enter the expedited shipment freight Cost for request ID <b>${id}</b>.
    </p>
  `;

  GmailApp.sendEmail(
    MANAGER_EMAIL,
    `New Expedited Shipment Request ${id} - Cost Input Needed`,
    "",
    { htmlBody: htmlBody }
  );
}

// ======================
// üßÆ 2. ON EDIT (Manager adds cost)
// ======================
function onEdit(e) {
  const sheet = e.source.getSheetByName(SHEET_NAME);
  if (!sheet || sheet.getName() !== SHEET_NAME) return;

  const col = e.range.getColumn();
  const row = e.range.getRow();

  // Freight Cost = column L (12)
  if (col !== 12) return;

  const id = sheet.getRange(row, 1).getValue();
  const cost = e.range.getValue();
  const prodornonprod = sheet.getRange(row, 5).getValue().toString().trim().toLowerCase(); // normalize

  if (cost && cost !== "") {
    // üü© Remove highlight once cost is entered
    e.range.setBackground(null);
    const isProduction = prodornonprod.toLowerCase() === "production";

    // ‚úÖ LOG isProduction in column Y (column 25)
    sheet.getRange(row, 25).setValue(isProduction ? "TRUE" : "FALSE");

    if (isProduction) {
      // üè≠ Production flow ‚Üí send to planner
      sheet.getRange(row, 22).setValue("Cost Added - Awaiting Planner Approval");
      sendApprovalEmail(row, id, cost, 1); // level 1 ‚Üí planner
    } else {
      // üßæ Non-production flow ‚Üí skip planner
      if (cost >= 10000) {
        sheet.getRange(row, 22).setValue("Cost Added - Sent to Director 1 (then Director 2)");
        sendApprovalEmail(row, id, cost, 2); // Director 1 first
      } else {
        sheet.getRange(row, 22).setValue("Cost Added - Sent to Director 1 (Skipping Planner)");
        sendApprovalEmail(row, id, cost, 2); // Director 1 only
      }
    }
  }
}

// ======================
// ‚úâÔ∏è 3. SEND APPROVAL EMAILS
// ======================
function sendApprovalEmail(row, id, cost, approverLevel) {
  const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);

  const requesterEmail = sheet.getRange(row,2).getValue();
  const supplier   = sheet.getRange(row, 3).getValue();
  const listPartNumber = sheet.getRange(row, 4).getValue();
  const prodornonprod = sheet.getRange(row, 5).getValue();
  const chargesupplier = sheet.getRange(row,6).getValue();
  const transportationMode = sheet.getRange(row,7).getValue();
  const needBy = sheet.getRange(row,8).getValue();
  const rational = sheet.getRange(row,9).getValue();
  const rationalComments = sheet.getRange(row,10).getValue();
  const jiraTicket = sheet.getRange(row, 11).getValue();

  let toEmail = "";
  let next = "";

  // üìù Planner note
  let plannerNote = "";
  if (approverLevel === 1) {
    plannerNote = `<p style="font-family:Arial; font-size:14px; color:#d9534f;">
      ‚ö†Ô∏è If you are a planner and the parts are classified as <b>Non-production</b>, please click "Approve" so it can be forwarded to the directors.
    </p>`;
  }

  // üß† Skip planner if non-production
  if (approverLevel === 1 && prodornonprod === "production") {
    // send to planner
  } else if (approverLevel === 1 && prodornonprod === "non-production") {
    // non-production ‚Üí skip planner, actually should never happen
    Logger.log(`Non-production request should not call level 1`);
    return;
  }

  if (approverLevel === 1) {
    // Column D (index 4) contains the CSV URL for this row
    const csvUrl = sheet.getRange(row, 4).getValue(); 
    toEmail = getPlannerEmailFromCSV(csvUrl);
    next = "Planner";
  }
  else if (approverLevel === 2) { toEmail = DIRECTOR1_EMAIL; next = "Director 1"; }
  else if (approverLevel === 3) { toEmail = DIRECTOR2_EMAIL; next = "Director 2"; }


  const formattedCost = Number(cost).toLocaleString("en-US", {
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  });

  const logLink = "https://docs.google.com/spreadsheets/d/1mlSBqK9pVCAfbapFpZtgWJAwuxANDgUTDQd9QpB8JQ0/edit?gid=148482207#gid=148482207";
  const sheetLinkHTML = `<a href="${logLink}" style="color:#007bff; text-decoration:none;"><b>Expedited Shipments Log</b></a>`;

  const approveUrl = `${BASE_URL}?action=approve&level=${approverLevel}&id=${id}`;
  const rejectUrl = `${BASE_URL}?action=rejectForm&level=${approverLevel}&id=${id}`;

  const htmlBody = `
    <p style="font-family:Arial; font-size:14px;">Dear ${next},</p>
    
    ${plannerNote}

    <p>Please review the following expedited shipment request and take appropriate action:</p>

    <table style="border-collapse:collapse; width:600px; font-family:Arial; font-size:13px; border:1px solid #ccc; border-radius:8px; overflow:hidden;">
      <tr style="background-color:#172d44; color:white; text-align:left;">
        <th style="padding:8px; width:40%;">Field</th>
        <th style="padding:8px; width:60%;">Details</th>
      </tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Request ID</b></td><td style="padding:8px;">${id}</td></tr>
      <tr><td style="padding:8px;"><b>Requester</b></td><td style="padding:8px;">${requesterEmail}</td></tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Supplier</b></td><td style="padding:8px;">${supplier}</td></tr>
      
      <tr><td style="padding:8px;"><b>List of PO, Part Number, QTY</b></td><td style="padding:8px;">${listPartNumber}</td></tr>

      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Production or Non-production</b></td><td style="padding:8px;">${prodornonprod}</td></tr>

      <tr><td style="padding:8px;"><b>Charge back to supplier?</b></td><td style="padding:8px;">${chargesupplier}</td></tr>

      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Transportation Mode</b></td><td style="padding:8px;">${transportationMode}</td></tr>

      <tr><td style="padding:8px;"><b>Need By</b></td><td style="padding:8px;">${needBy}</td></tr>

      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Reasoning</b></td><td style="padding:8px;">${rational}</td></tr>

      <tr><td style="padding:8px;"><b>Additional Comments on Reasoning</b></td><td style="padding:8px;">${rationalComments}</td></tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Jira Ticket (if applicable)</b></td><td style="padding:8px;">${jiraTicket}</td></tr>

      <tr><td style="padding:8px;"><b>Freight Cost</b></td><td style="padding:8px;">${formattedCost}</td></tr>


    </table>

    <br>
    <div style="text-align:center;">
      <!-- Approve Button -->
      <a href="${approveUrl}"
          target="_blank"
          style="background-color:#90ee90; color:#000; text-decoration:none; padding:10px 20px;
                border-radius:8px; font-family:Arial; font-size:13px; border:1px solid #66bb6a;
                display:inline-block; min-width:100px; text-align:center;">
         Approve
      </a>
      &nbsp;&nbsp;
      
      <!-- Reject Button -->
      <a href="${rejectUrl}"
        target="_blank"
        style="background-color:#ff7f7f; color:#000; text-decoration:none; padding:10px 20px;
                border-radius:8px; font-family:Arial; font-size:13px; border:1px solid #e57373;
                display:inline-block; min-width:100px; text-align:center;">
        Reject
      </a>
    </div>

    <br>
    <p>You can review this request in the ${sheetLinkHTML}.</p>
    <p style="font-size:12px; color:#555;">Request ID: ${id} | Approval Level: ${approverLevel}</p>
  `;

  GmailApp.sendEmail(
    toEmail,
    `Expedited Shipment Request ${id} ‚Äì Approval Needed (${next})`,
    "",
    { htmlBody: htmlBody }
  );
}

// ======================
// üåê 4. HANDLE APPROVAL LINKS
// ======================
function doGet(e) {
  try {
    if (!e) return HtmlService.createHtmlOutput("‚ùå No parameters received.");
    Logger.log("Incoming parameters: " + JSON.stringify(e.parameter));

    const action = e.parameter.action || "";
    const id = e.parameter.id || "";
    const level = String(e.parameter.level || "").trim();

    if (!id || !action || !level)
      return HtmlService.createHtmlOutput(`‚ö†Ô∏è Missing parameters: ${JSON.stringify(e.parameter)}`);

    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const sheet = ss.getSheetByName(SHEET_NAME);
    if (!sheet) throw new Error("Sheet not found.");

    const data = sheet.getDataRange().getValues();
    const rowIndex = data.findIndex(r => r[0] === id) + 1;
    if (rowIndex <= 0) throw new Error("Request not found: " + id);

    const now = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "yyyy-MM-dd HH:mm:ss");
    const logLink = "https://docs.google.com/spreadsheets/d/1mlSBqK9pVCAfbapFpZtgWJAwuxANDgUTDQd9QpB8JQ0/edit?gid=148482207#gid=148482207";
    const sheetLinkHTML = `<a href="${logLink}" style="color:#007bff; text-decoration:none;"><b>Expedited Shipments Log</b></a>`;

    if (action === "approve") {
      const cost = Number(sheet.getRange(rowIndex, 12).getValue());
      let title = "";
      let message = "";
      let color = "";

      if (level === "1") {
        sheet.getRange(rowIndex, 13).setValue("Approved");
        sheet.getRange(rowIndex, 14).setValue(now);

        const plannerName = Session.getActiveUser().getEmail() || "Manager";
        sheet.getRange(rowIndex, 23).setValue(plannerName);

        const prodornonprod = sheet.getRange(rowIndex, 5).getValue().toString().trim().toLowerCase();

        // === PRODUCTION FLOW ===
        if (prodornonprod === "production") {
          if (cost < 5000) {
            sheet.getRange(rowIndex, 22).setValue("Planner Approved ‚Äì Complete");
            sendCompletionEmail(rowIndex);
            title = "‚úÖ Request Approved";
            message = "Planner approved. Request fully approved and processed.";
            color = "#2ecc71";
          } else if (cost >= 5000 && cost < 10000) {
            sheet.getRange(rowIndex, 22).setValue("Planner Approved ‚Äì Sent to Director 1");
            sendApprovalEmail(rowIndex, id, cost, 2); // Director 1
            title = "üü¶ Approval Progressed";
            message = "Planner approved. Forwarded to <b>Director 1</b> for approval.";
            color = "#27ae60";
          } else {
            sheet.getRange(rowIndex, 22).setValue("Planner Approved ‚Äì Sent to Director 1 and Director 2");
            sendApprovalEmail(rowIndex, id, cost, 2); // Director 1 first
            title = "üü¶ Approval Progressed";
            message = "Planner approved. Forwarded to <b>Director 1</b> and Director 2 for approval.";
            color = "#27ae60";
          }

        // === NON-PRODUCTION FLOW ===
        } else if (prodornonprod === "non-production") {
          if (cost < 10000) {
            sheet.getRange(rowIndex, 22).setValue("Non-Production ‚Äì Sent to Director 1.");
            sendApprovalEmail(rowIndex, id, cost, 2); // Director 1 directly
            title = "üü¶ Approval Progressed";
            message = "Non-production request routed directly to <b>Director 1</b> for approval.";
            color = "#3498db";
          } else {
            sheet.getRange(rowIndex, 22).setValue("Non-Production ‚Äì Sent to Director 1 (then Director 2)");
            sendApprovalEmail(rowIndex, id, cost, 2); // Director 1 first, then Director 2
            title = "üü© Approval Progressed";
            message = "Non-production request routed to <b>Director 1</b> and Director 2 for approval.";
            color = "#27ae60";
          }
        }
      }


      else if (level === "2") {
        sheet.getRange(rowIndex, 16).setValue("Approved");
        sheet.getRange(rowIndex, 17).setValue(now);

        if (cost >= 10000) {
          // After Director 1 approves, forward to Director 2
          sheet.getRange(rowIndex, 22).setValue("Director 1 Approved ‚Äì Sent to Director 2");
          sendApprovalEmail(rowIndex, id, cost, 3); // ‚úÖ Send to Director 2
          title = "üü¶ Approval Progressed";
          message = "Director 1 approved. Forwarded to <b>Director 2</b> for final approval.";
          color = "#2980b9";
        } else {
          sheet.getRange(rowIndex, 22).setValue("Director 1 Approved ‚Äì Complete");
          sendCompletionEmail(rowIndex);
          title = "‚úÖ Request Approved";
          message = "Director 1 approved. Request fully approved and processed.";
          color = "#2ecc71";
        }
      }


      else if (level === "3") {
        sheet.getRange(rowIndex, 19).setValue("Approved");
        sheet.getRange(rowIndex, 20).setValue(now);
        sheet.getRange(rowIndex, 22).setValue("D2 Approved ‚Äì Complete");
        sendCompletionEmail(rowIndex);
        title = "üèÅ Final Approval Complete";
        message = "Director 2 approved. Request fully approved and processed.";
        color = "#16a085";
      }

      // === Return Styled Confirmation Page ===
      return HtmlService.createHtmlOutput(`
        <html>
          <head>
            <title>${title}</title>
            <style>
              body {
                font-family: Arial, sans-serif;
                background-color: #f6f9fc;
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                margin: 0;
              }
              .card {
                background: white;
                border-radius: 12px;
                box-shadow: 0 4px 10px rgba(0,0,0,0.15);
                padding: 40px;
                text-align: center;
                max-width: 450px;
                animation: fadeIn 0.7s ease-in-out;
              }
              h2 {
                color: ${color};
                margin-bottom: 10px;
              }
              p {
                font-size: 16px;
                color: #333;
              }
              a {
                display: inline-block;
                margin-top: 20px;
                padding: 10px 20px;
                background-color: ${color};
                color: white;
                border-radius: 8px;
                text-decoration: none;
                transition: background 0.3s;
              }
              a:hover { background-color: #1b4d3e; }
              @keyframes fadeIn {
                from { opacity: 0; transform: scale(0.9); }
                to { opacity: 1; transform: scale(1); }
              }
            </style>
          </head>
          <body>
            <div class="card">
              <h2>${title}</h2>
              <p>${message}</p>
              <a href="https://docs.google.com/spreadsheets/d/1mlSBqK9pVCAfbapFpZtgWJAwuxANDgUTDQd9QpB8JQ0/edit?gid=148482207#gid=148482207" target="_blank">View in Expedited Shipments Log</a>
            </div>
          </body>
        </html>
      `);
    }

    if (action === "rejectForm") {
      return HtmlService.createHtmlOutput(`
        <html>
          <head><title>Reject Request ${id}</title></head>
          <body style="font-family:Arial; background-color:#f9f9f9; padding:30px;">
            <h2 style="color:#c0392b;">Reject Expedited Shipment Request ${id}</h2>
            <form id="rejectForm" action="${BASE_URL}" method="GET">
              <input type="hidden" name="action" value="reject">
              <input type="hidden" name="level" value="${level}">
              <input type="hidden" name="id" value="${id}">
              <label for="comment">Reason for rejection:</label><br><br>
              <textarea name="comment" rows="4" cols="60" required
                        style="font-family:Arial; padding:8px; border:1px solid #ccc; border-radius:6px;"></textarea>
              <br><br>
              <button id="submitBtn" type="submit" 
                style="background-color:#ff7f7f; color:#000; border:none; padding:10px 20px; border-radius:6px; cursor:pointer;">
                Submit Rejection
              </button>
            </form>

            <script>
              document.getElementById("rejectForm").addEventListener("submit", function(e) {
                const btn = document.getElementById("submitBtn");
                btn.disabled = true;
                btn.innerText = "Submitting...";
                setTimeout(() => {
                  alert("‚úÖ Rejection has been submitted successfully.");
                }, 1000);
              });
            </script>
          </body>
        </html>
      `);
    }

    // === REJECT ===
    if (action === "reject") {
      const reason =
        level === "1" ? "Planner" :
        level === "2" ? "Director 1" :
        "Director 2";

      const approvalCol = level === "1" ? 13 : level === "2" ? 16 : 19;
      const timeCol = level === "1" ? 14 : level === "2" ? 17 : 20;
      const commentCol = level === "1" ? 15 : level === "2" ? 18 : 21;
      const comment = e.parameter.comment || "No comment provided";

      sheet.getRange(rowIndex, approvalCol).setValue("Rejected");
      sheet.getRange(rowIndex, timeCol).setValue(now);
      sheet.getRange(rowIndex, commentCol).setValue(comment);
      sheet.getRange(rowIndex, 22).setValue("Rejected");

      // Send notification email
      const requesterEmail = sheet.getRange(rowIndex, 2).getValue();

      const subject = `Expedited Shipment Request ${id} ‚Äì Rejected by ${reason}`;
      const htmlBody = `
        <div style="font-family:Segoe UI, Roboto, Helvetica, Arial, sans-serif; color:#333; background:#f9f9f9; padding:25px; border-radius:10px;">
          <h2 style="color:#c0392b; margin-top:0;">‚ùå Expedited Shipment Request Rejected</h2>
          <table style="width:100%; border-collapse:collapse; font-size:15px;">
            <tr>
              <td style="width:180px; font-weight:bold; padding:8px; border-bottom:1px solid #ddd;">Request ID:</td>
              <td style="padding:8px; border-bottom:1px solid #ddd;">${id}</td>
            </tr>
            <tr>
              <td style="font-weight:bold; padding:8px; border-bottom:1px solid #ddd;">Rejected By:</td>
              <td style="padding:8px; border-bottom:1px solid #ddd;">${reason}</td>
            </tr>
            <tr>
              <td style="font-weight:bold; padding:8px; border-bottom:1px solid #ddd;">Status:</td>
              <td style="padding:8px; border-bottom:1px solid #ddd; color:#c0392b; font-weight:bold;">Rejected</td>
            </tr>
            <tr>
              <td style="font-weight:bold; padding:8px; vertical-align:top;">Reason / Comments:</td>
              <td style="padding:8px;">${comment}</td>
            </tr>
          </table>

          <p style="margin-top:20px; font-size:15px;">
            View this request in the <a href="${logLink}" style="color:#2980b9; text-decoration:none;">Expedited Shipments Log</a>.
          </p>
        </div>
      `;

      GmailApp.sendEmail(
        `${MANAGER_EMAIL}, ${requesterEmail}`,
        subject,
        "",
        { htmlBody }
      );

      return HtmlService.createHtmlOutput(`
        <html>
          <body style="font-family:Arial; padding:30px;">
            <h2 style="color:#c0392b;">‚ùå Request ${id} has been rejected by ${reason}.</h2>
            <p>Reason: ${comment}</p>
            <p><a href="${logLink}" target="_blank">View in Expedited Shipments Log</a></p>
            <script>
              setTimeout(() => {
                window.location.href = '${logLink}';
              }, 4000);
            </script>
          </body>
        </html>
      `);
    }

    return HtmlService.createHtmlOutput("‚ö†Ô∏è Unknown action.");
  } catch (err) {
    return HtmlService.createHtmlOutput("‚ùå Error: " + err.message);
  }
}

// ======================
// üì¨ 5. SEND COMPLETION EMAIL
// ======================
function sendCompletionEmail(row) {
  const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);

  const id = sheet.getRange(row, 1).getValue();
  const requesterEmail = sheet.getRange(row, 2).getValue();
  const supplier = sheet.getRange(row, 3).getValue();
  const listPartNumber = sheet.getRange(row, 4).getValue();
  const prodornonprod = sheet.getRange(row, 5).getValue();
  const chargesupplier = sheet.getRange(row, 6).getValue();
  const transportationMode = sheet.getRange(row, 7).getValue();
  const needBy = sheet.getRange(row, 8).getValue();
  const rational = sheet.getRange(row, 9).getValue();
  const rationalComments = sheet.getRange(row, 10).getValue();
  const jiraTicket = sheet.getRange(row, 11).getValue();
  const cost = sheet.getRange(row, 12).getValue();

  const formattedCost = Number(cost).toLocaleString("en-US", {
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  });

  const logLink =
    "https://docs.google.com/spreadsheets/d/1mlSBqK9pVCAfbapFpZtgWJAwuxANDgUTDQd9QpB8JQ0/edit?gid=148482207#gid=148482207";

  const htmlBody = `
    <p style="font-family:Arial; font-size:14px;">‚úÖ The following expedited shipment request has been <b>fully approved and processed</b>:</p>
    <table style="border-collapse:collapse; width:600px; font-family:Arial; font-size:13px; border:1px solid #ccc; border-radius:8px; overflow:hidden;">
      <tr style="background-color:#172d44; color:white; text-align:left;">
        <th style="padding:8px; width:40%;">Field</th>
        <th style="padding:8px; width:60%;">Details</th>
      </tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Request ID</b></td><td style="padding:8px;">${id}</td></tr>
      <tr><td style="padding:8px;"><b>Requester</b></td><td style="padding:8px;">${requesterEmail}</td></tr>
      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Supplier</b></td><td style="padding:8px;">${supplier}</td></tr>

      <tr><td style="padding:8px;"><b>List of PO, Part Number, Qty</b></td><td style="padding:8px;">${listPartNumber}</td></tr>

      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Production or Non-production</b></td><td style="padding:8px;">${prodornonprod}</td></tr>

      <tr><td style="padding:8px;"><b>Charge back to supplier?</b></td><td style="padding:8px;">${chargesupplier}</td></tr>

      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Transportation Mode</b></td><td style="padding:8px;">${transportationMode}</td></tr>
      
      
      <tr><td style="padding:8px;"><b>Need By</b></td><td style="padding:8px;">${needBy}</td></tr>


      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Reasoning</b></td><td style="padding:8px;">${rational}</td></tr>

      <tr><td style="padding:8px;"><b>Additional Comments on Reasoning</b></td><td style="padding:8px;">${rationalComments}</td></tr>

      <tr style="background-color:#f9f9f9;"><td style="padding:8px;"><b>Jira Ticket (if applicable)</b></td><td style="padding:8px;">${jiraTicket}</td></tr>

      <tr><td style="padding:8px;"><b>Freight Cost</b></td><td style="padding:8px;">${formattedCost}</td></tr>

    </table>
    <br>

    <p style="font-family:Arial; font-size:14px; background:#e8f5e9; border-left:4px solid #2e7d32; padding:10px 12px; border-radius:6px;">
      <b>Please go ahead and confirm the shipment.</b>
    </p>


    <p style="font-family:Arial; font-size:13px;">
      You can view the full record in the
      <a href="${logLink}" style="color:#007bff; text-decoration:none;"><b>Expedited Shipments Log</b></a>.
    </p>
  `;

  // üìß Send to both Requester and Manager
  GmailApp.sendEmail(
    `${requesterEmail}, ${MANAGER_EMAIL}`,
    `Expedited Shipment Request ${id} ‚Äì Fully Approved`,
    "",
    { htmlBody: htmlBody }
  );
}


// Helper: get planner email from CSV file link in column D
function getPlannerEmailFromCSV(csvLink) {
  try {
    if (!csvLink) return PLANNER_EMAIL; // fallback if no link

    // Extract the file ID from the Google Drive link
    const fileIdMatch = csvLink.match(/[-\w]{25,}/);
    if (!fileIdMatch) return PLANNER_EMAIL;
    const fileId = fileIdMatch[0];

    // Access the file from Drive
    const file = DriveApp.getFileById(fileId);
    const csvContent = file.getBlob().getDataAsString();
    const rows = Utilities.parseCsv(csvContent);

    if (!rows || rows.length < 3) return PLANNER_EMAIL; // fallback if CSV is too short

    const emailCounts = {};
    // Start reading from row 3 (index 2) as per your instruction
    for (let i = 2; i < rows.length; i++) {
      const email = rows[i][3]; // Column D in CSV (index 3)
      if (!email) continue;
      emailCounts[email] = (emailCounts[email] || 0) + 1;
    }

    // Get the most frequent email
    let mostFrequentEmail = PLANNER_EMAIL;
    let maxCount = 0;
    for (const email in emailCounts) {
      if (emailCounts[email] > maxCount) {
        maxCount = emailCounts[email];
        mostFrequentEmail = email;
      }
    }

    return mostFrequentEmail;
  } catch (err) {
    Logger.log("Error fetching CSV from Drive: " + err);
    return PLANNER_EMAIL; // fallback
  }
}


